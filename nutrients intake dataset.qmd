---
title: "nutrients intake data"
author: "habeebah"
format: html
editor: visual
---



```{r}
# IMPORTING A DATA
nutrient <- read.csv('/home/habeebat/Desktop/nutrient.csv', stringsAsFactors = TRUE, header = TRUE)


```

```{r}
# exploring the nutrient 
nutrient |>
  janitor::clean_names() -> nutrient
```

```{r}
# filter Nutrients type table to have only the Energy and save it in a variable "energy_data"
energy_data <- nutrient%>% filter(grepl("Energy", nutrient))
```

```{r}
# filter the Demographics to only Income and Race and save it in the income and race variables
#use rbind command to join both variables and save it in variable "energy_data"
income <- energy_data %>%
  filter(grepl("Income" , energy_data$demographics))

race <- energy_data %>%
  filter(grepl("Race" , energy_data$demographics))

energy_data <- rbind(income,race)
```

```{r}
#custom way of cleaning
#can also use
#energy_data$demographic <- make_clean_names(energy_data$demographic)
energy_data$demographics <- tolower(gsub("[^a-zA-Z0-9]+", "_", energy_data$demographics))


```

```{r}
#comparing foodsource and Demographics(income and race) with energy value using linear regression
x_1 = energy_data$demographics
x_2 = energy_data$food_source
y = energy_data$value

model_n = lm(y ~  x_1 + x_2, energy_data)
summary(model_n)
```

```{r}
#comparing foodsource and Demographics(income and race) with energy value using linear regression
x_1 = energy_data$demographics
x_2 = energy_data$food_source
y = energy_data$value

model_n1 = lm(y ~  x_1 + x_2 + x_1 * x_2, energy_data)
summary(model_n1)
```

```{r}
#comparing foodsource and Demographics(income and race) with energy value using linear regression
x_1 = energy_data$demographics
x_2 = energy_data$food_source
y = energy_data$value

model_n2 = lm(y ~ x_1 * x_2, energy_data)
summary(model_n2)
```

```{r}
# join the demographics(Income and Race) and food_source together in a "new column" table and save it in energy_data variable
energy_data <- energy_data |> 
  mutate(new_column = interaction(demographics, food_source))

```

```{r}
#Remove total from the food_source, Not needed
energy_data <- subset(energy_data, food_source != "Total")

```

```{r}
#visualization of the impact of food_source and demographics(income) on energy value
# filter income and save in income_data variable
income_data <- energy_data %>%
  filter(grepl("income", energy_data$demographics))

# Step 2: Group by food source and income
summary_income <- income_data %>%
  group_by(food_source, demographics) %>%
  summarise(
    mean_value = mean(value, na.rm = TRUE),
    se_value = sd(value, na.rm = TRUE) / sqrt(n()),
    .groups = "drop"
  )

# Step 3: Plot
ggplot(summary_income, aes(x = food_source, y = mean_value, fill = demographics)) +
  geom_bar(stat = "identity", position = position_dodge(0.9)) +
  geom_errorbar(aes(ymin = mean_value - se_value, ymax = mean_value + se_value),
                width = 0.2, position = position_dodge(0.9)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
  labs(title = "Impact of Food Source and Income on Energy Value",
       x = "Food Source", y = "Mean Energy Value") +
  theme_minimal()
```

```{r}
#visualization of the impact of food_source and demographics(race) on energy value
# filter income and save in race_data variable
race_data <- energy_data %>%
  filter(grepl("race", energy_data$demographics))

# Step 2: Group by food source and income
summary_income <- race_data %>%
  group_by(food_source, demographics) %>%
  summarise(
    mean_value = mean(value, na.rm = TRUE),
    se_value = sd(value, na.rm = TRUE) / sqrt(n()),
    .groups = "drop"
  )

# Step 3: Plot
ggplot(summary_income, aes(x = food_source, y = mean_value, fill = demographics)) +
  geom_bar(stat = "identity", position = position_dodge(0.9)) +
  geom_errorbar(aes(ymin = mean_value - se_value, ymax = mean_value + se_value),
                width = 0.2, position = position_dodge(0.9)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
  labs(title = "Impact of Food Source and Race on Energy Value",
       x = "Food Source", y = "Mean Energy Value") +
  theme_minimal()
```
